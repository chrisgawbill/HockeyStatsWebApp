{"ast":null,"code":"import { StandingsTeam } from \"../Models/StandingsTeam\";\nexport function CreateConferenceStandingsArray(initialStandings, matchingConferenceName) {\n  let fixedConferenceStandings = new Array(16);\n  for (let i = 0; i < initialStandings.length; i++) {\n    const responseTeam = initialStandings[i];\n    if (responseTeam.conferenceName === matchingConferenceName) {\n      const fixedTeamRecord = responseTeam.wins + \"-\" + responseTeam.losses + \"-\" + responseTeam.otLosses;\n      const points = responseTeam.points;\n      const pointsPctg = Math.round(responseTeam.pointPctg * 1000) / 1000;\n      const standingsTeam = new StandingsTeam(i, responseTeam.conferenceSequence, responseTeam.divisionSequence, responseTeam.teamCommonName.default, fixedTeamRecord, points, pointsPctg);\n      fixedConferenceStandings[i] = standingsTeam;\n    }\n  }\n  return fixedConferenceStandings;\n}\n_c = CreateConferenceStandingsArray;\nvar _c;\n$RefreshReg$(_c, \"CreateConferenceStandingsArray\");","map":{"version":3,"names":["StandingsTeam","CreateConferenceStandingsArray","initialStandings","matchingConferenceName","fixedConferenceStandings","Array","i","length","responseTeam","conferenceName","fixedTeamRecord","wins","losses","otLosses","points","pointsPctg","Math","round","pointPctg","standingsTeam","conferenceSequence","divisionSequence","teamCommonName","default","_c","$RefreshReg$"],"sources":["C:/Users/gawbi/Programming/HockeyStatsWebApp/react/src/Data/Helpers/ConferenceStandingsHelper.ts"],"sourcesContent":["import { StandingsTeam } from \"../Models/StandingsTeam\";\r\n\r\nexport function CreateConferenceStandingsArray(\r\n  initialStandings: any[],\r\n  matchingConferenceName: string\r\n) {\r\n  let fixedConferenceStandings:StandingsTeam[] = new Array(16);\r\n  for (let i = 0; i < initialStandings.length; i++) {\r\n    const responseTeam = initialStandings[i];\r\n    if (responseTeam.conferenceName === matchingConferenceName) {\r\n      const fixedTeamRecord =\r\n        responseTeam.wins +\r\n        \"-\" +\r\n        responseTeam.losses +\r\n        \"-\" +\r\n        responseTeam.otLosses;\r\n      const points = responseTeam.points;\r\n      const pointsPctg = Math.round(responseTeam.pointPctg*1000)/1000;\r\n\r\n      const standingsTeam: StandingsTeam = new StandingsTeam(\r\n        i,\r\n        responseTeam.conferenceSequence,\r\n        responseTeam.divisionSequence,\r\n        responseTeam.teamCommonName.default,\r\n        fixedTeamRecord,\r\n        points,\r\n        pointsPctg\r\n      );\r\n      fixedConferenceStandings[i] = standingsTeam;\r\n    }\r\n  }\r\n  return fixedConferenceStandings;\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,yBAAyB;AAEvD,OAAO,SAASC,8BAA8BA,CAC5CC,gBAAuB,EACvBC,sBAA8B,EAC9B;EACA,IAAIC,wBAAwC,GAAG,IAAIC,KAAK,CAAC,EAAE,CAAC;EAC5D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,gBAAgB,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IAChD,MAAME,YAAY,GAAGN,gBAAgB,CAACI,CAAC,CAAC;IACxC,IAAIE,YAAY,CAACC,cAAc,KAAKN,sBAAsB,EAAE;MAC1D,MAAMO,eAAe,GACnBF,YAAY,CAACG,IAAI,GACjB,GAAG,GACHH,YAAY,CAACI,MAAM,GACnB,GAAG,GACHJ,YAAY,CAACK,QAAQ;MACvB,MAAMC,MAAM,GAAGN,YAAY,CAACM,MAAM;MAClC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACT,YAAY,CAACU,SAAS,GAAC,IAAI,CAAC,GAAC,IAAI;MAE/D,MAAMC,aAA4B,GAAG,IAAInB,aAAa,CACpDM,CAAC,EACDE,YAAY,CAACY,kBAAkB,EAC/BZ,YAAY,CAACa,gBAAgB,EAC7Bb,YAAY,CAACc,cAAc,CAACC,OAAO,EACnCb,eAAe,EACfI,MAAM,EACNC,UACF,CAAC;MACDX,wBAAwB,CAACE,CAAC,CAAC,GAAGa,aAAa;IAC7C;EACF;EACA,OAAOf,wBAAwB;AACjC;AAACoB,EAAA,GA9BevB,8BAA8B;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}