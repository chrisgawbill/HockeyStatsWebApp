{"ast":null,"code":"import{Container}from\"react-bootstrap\";import{useState,useEffect}from\"react\";import StandingsContainer from\"./StandingsContainer\";import{GetCurrentStandings}from\"../../../Services/ApiHandler\";import{CreateConferenceStandingsArray}from\"../../../Data/Helpers/ConferenceStandingsHelper\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LandingPageStandings(){const[easternStandingsData,setEasternStandingsData]=useState([]);const[westernStandingsData,setWesternStandingsData]=useState([]);// const [metroStandings, setMetroStandings] = useState<StandingsTeam[]>(\n//   new Array(16)\n// );\n// const [atlanticStandings, setAtlanticStandings] = useState<StandingsTeam[]>(\n//   new Array(16)\n// );\n// const [centralStandings, setCentralStandings] = useState<StandingsTeam[]>(\n//   new Array(16)\n// );\n// const [pacificStandings, setPacificStandings] = useState<StandingsTeam[]>(\n//   new Array(16)\n// );\n//This useEffect will call apis to get data that will be used in components\nuseEffect(()=>{GetStandings(setEasternStandingsData,setWesternStandingsData);},[]);// useEffect(() => {\n//   if (\n//     easternStandingsData !== undefined ||\n//     westernStandingsData !== undefined\n//   ) {\n//     GetDivisionStandings(\n//       setMetroStandings,\n//       \"Metropolitan\",\n//       easternStandingsData\n//     );\n//     GetDivisionStandings(\n//       setAtlanticStandings,\n//       \"Atlantic\",\n//       easternStandingsData\n//     );\n//     GetDivisionStandings(\n//       setCentralStandings,\n//       \"Central\",\n//       westernStandingsData\n//     );\n//     GetDivisionStandings(\n//       setPacificStandings,\n//       \"Pacific\",\n//       westernStandingsData\n//     );\n//   }\n// }, [easternStandingsData, westernStandingsData]);\nfunction GetStandings(setEasternStandings,setWesternStandings){GetCurrentStandings().then(response=>{const responseStandings=response.data.standings;const easternStandings=CreateConferenceStandingsArray(responseStandings,\"Eastern\");const westernStandings=CreateConferenceStandingsArray(responseStandings,\"Western\");setEasternStandings(easternStandings);setWesternStandings(westernStandings);}).catch(error=>console.log(error));}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(StandingsContainer,{standingsName:\"Eastern\",standingsData:easternStandingsData})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(StandingsContainer,{standingsName:\"Western\",standingsData:westernStandingsData})})]});}// function GetDivisionStandings(\n//   setDivisionStandings: Function,\n//   divisionName: string,\n//   conferenceStandings: StandingsTeam[]\n// ) {\n//   let divisionStandingsArray: StandingsTeam[] = new Array(8);\n//   divisionStandingsArray = conferenceStandings.filter((team) => team.divisionName === divisionName)\n//   setDivisionStandings(divisionStandingsArray);\n// }","map":{"version":3,"names":["Container","useState","useEffect","StandingsContainer","GetCurrentStandings","CreateConferenceStandingsArray","React","jsx","_jsx","jsxs","_jsxs","LandingPageStandings","easternStandingsData","setEasternStandingsData","westernStandingsData","setWesternStandingsData","GetStandings","setEasternStandings","setWesternStandings","then","response","responseStandings","data","standings","easternStandings","westernStandings","catch","error","console","log","children","standingsName","standingsData"],"sources":["C:/Users/gawbi/Programming/HockeyStatsWebApp/react/src/Components/LandingPage/LandingPageStandings/LandingPageStandings.tsx"],"sourcesContent":["import { Container } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport StandingsContainer from \"./StandingsContainer\";\r\nimport { GetCurrentStandings } from \"../../../Services/ApiHandler\";\r\nimport { CreateConferenceStandingsArray } from \"../../../Data/Helpers/ConferenceStandingsHelper\";\r\nimport React from \"react\";\r\nimport { StandingsTeam } from \"../../../Data/Models/StandingsTeam\";\r\n\r\nexport default function LandingPageStandings() {\r\n  const [easternStandingsData, setEasternStandingsData] = useState<\r\n    StandingsTeam[]\r\n  >([]);\r\n  const [westernStandingsData, setWesternStandingsData] = useState<\r\n    StandingsTeam[]\r\n  >([]);\r\n\r\n  // const [metroStandings, setMetroStandings] = useState<StandingsTeam[]>(\r\n  //   new Array(16)\r\n  // );\r\n  // const [atlanticStandings, setAtlanticStandings] = useState<StandingsTeam[]>(\r\n  //   new Array(16)\r\n  // );\r\n  // const [centralStandings, setCentralStandings] = useState<StandingsTeam[]>(\r\n  //   new Array(16)\r\n  // );\r\n  // const [pacificStandings, setPacificStandings] = useState<StandingsTeam[]>(\r\n  //   new Array(16)\r\n  // );\r\n\r\n  //This useEffect will call apis to get data that will be used in components\r\n  useEffect(() => {\r\n    GetStandings(setEasternStandingsData, setWesternStandingsData);\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   if (\r\n  //     easternStandingsData !== undefined ||\r\n  //     westernStandingsData !== undefined\r\n  //   ) {\r\n  //     GetDivisionStandings(\r\n  //       setMetroStandings,\r\n  //       \"Metropolitan\",\r\n  //       easternStandingsData\r\n  //     );\r\n  //     GetDivisionStandings(\r\n  //       setAtlanticStandings,\r\n  //       \"Atlantic\",\r\n  //       easternStandingsData\r\n  //     );\r\n  //     GetDivisionStandings(\r\n  //       setCentralStandings,\r\n  //       \"Central\",\r\n  //       westernStandingsData\r\n  //     );\r\n  //     GetDivisionStandings(\r\n  //       setPacificStandings,\r\n  //       \"Pacific\",\r\n  //       westernStandingsData\r\n  //     );\r\n  //   }\r\n  // }, [easternStandingsData, westernStandingsData]);\r\n  function GetStandings(\r\n    setEasternStandings: Function,\r\n    setWesternStandings: Function\r\n  ) {\r\n    GetCurrentStandings()\r\n      .then((response) => {\r\n        const responseStandings = response.data.standings;\r\n        const easternStandings: StandingsTeam[] =\r\n          CreateConferenceStandingsArray(responseStandings, \"Eastern\");\r\n        const westernStandings: StandingsTeam[] =\r\n          CreateConferenceStandingsArray(responseStandings, \"Western\");\r\n\r\n        setEasternStandings(easternStandings);\r\n        setWesternStandings(westernStandings);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <StandingsContainer\r\n            standingsName=\"Eastern\"\r\n            standingsData={easternStandingsData}\r\n          />\r\n        </div>\r\n        <div>\r\n          <StandingsContainer\r\n            standingsName=\"Western\"\r\n            standingsData={westernStandingsData}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n}\r\n// function GetDivisionStandings(\r\n//   setDivisionStandings: Function,\r\n//   divisionName: string,\r\n//   conferenceStandings: StandingsTeam[]\r\n// ) {\r\n//   let divisionStandingsArray: StandingsTeam[] = new Array(8);\r\n//   divisionStandingsArray = conferenceStandings.filter((team) => team.divisionName === divisionName)\r\n//   setDivisionStandings(divisionStandingsArray);\r\n// }\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,iBAAiB,CAC3C,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,kBAAkB,KAAM,sBAAsB,CACrD,OAASC,mBAAmB,KAAQ,8BAA8B,CAClE,OAASC,8BAA8B,KAAQ,iDAAiD,CAChG,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG1B,cAAe,SAAS,CAAAC,oBAAoBA,CAAA,CAAG,CAC7C,KAAM,CAACC,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGZ,QAAQ,CAE9D,EAAE,CAAC,CACL,KAAM,CAACa,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGd,QAAQ,CAE9D,EAAE,CAAC,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,SAAS,CAAC,IAAM,CACdc,YAAY,CAACH,uBAAuB,CAAEE,uBAAuB,CAAC,CAChE,CAAC,CAAE,EAAE,CAAC,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAS,CAAAC,YAAYA,CACnBC,mBAA6B,CAC7BC,mBAA6B,CAC7B,CACAd,mBAAmB,CAAC,CAAC,CAClBe,IAAI,CAAEC,QAAQ,EAAK,CAClB,KAAM,CAAAC,iBAAiB,CAAGD,QAAQ,CAACE,IAAI,CAACC,SAAS,CACjD,KAAM,CAAAC,gBAAiC,CACrCnB,8BAA8B,CAACgB,iBAAiB,CAAE,SAAS,CAAC,CAC9D,KAAM,CAAAI,gBAAiC,CACrCpB,8BAA8B,CAACgB,iBAAiB,CAAE,SAAS,CAAC,CAE9DJ,mBAAmB,CAACO,gBAAgB,CAAC,CACrCN,mBAAmB,CAACO,gBAAgB,CAAC,CACvC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CACzC,CACE,mBACEjB,KAAA,CAACV,SAAS,EAAA8B,QAAA,eACRtB,IAAA,QAAAsB,QAAA,cACEtB,IAAA,CAACL,kBAAkB,EACjB4B,aAAa,CAAC,SAAS,CACvBC,aAAa,CAAEpB,oBAAqB,CACrC,CAAC,CACC,CAAC,cACNJ,IAAA,QAAAsB,QAAA,cACEtB,IAAA,CAACL,kBAAkB,EACjB4B,aAAa,CAAC,SAAS,CACvBC,aAAa,CAAElB,oBAAqB,CACrC,CAAC,CACC,CAAC,EACG,CAAC,CAElB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}