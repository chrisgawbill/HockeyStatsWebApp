{"ast":null,"code":"import { PlayerStatLeader } from \"../Models/PlayerStatLeader\";\nexport default function PlayerStatLeaderConverter(playerLeaderResponseData, leadBy) {\n  let localPlayerResponseData = [];\n  switch (leadBy) {\n    case \"goals\":\n      localPlayerResponseData = playerLeaderResponseData.goals;\n      break;\n    case \"assists\":\n      localPlayerResponseData = playerLeaderResponseData.assists;\n      break;\n    case \"points\":\n      localPlayerResponseData = playerLeaderResponseData.points;\n      break;\n    case \"wins\":\n      localPlayerResponseData = playerLeaderResponseData.wins;\n      break;\n    default:\n      break;\n  }\n  let playerStatLeaderArray = new Array(10);\n  for (let i = 0; i < localPlayerResponseData.length; i++) {\n    const id = localPlayerResponseData[i].id;\n    const firstName = localPlayerResponseData[i].firstName.default;\n    const lastName = localPlayerResponseData[i].lastName.default;\n    const sweaterNumber = localPlayerResponseData[i].sweaterNumber;\n    const playerImage = localPlayerResponseData[i].headshot;\n    const teamAbbrev = localPlayerResponseData[i].teamAbbrev;\n    const teamName = localPlayerResponseData[i].teamName.default;\n    const teamLogo = localPlayerResponseData[i].teamLogo;\n    const position = localPlayerResponseData[i].position;\n    const value = localPlayerResponseData[i].value;\n    const playerStatLeader = new PlayerStatLeader(id, firstName, lastName, sweaterNumber, playerImage, teamAbbrev, teamName, teamLogo, position, value);\n    playerStatLeaderArray[i] = playerStatLeader;\n  }\n  return playerStatLeaderArray;\n}\n_c = PlayerStatLeaderConverter;\nvar _c;\n$RefreshReg$(_c, \"PlayerStatLeaderConverter\");","map":{"version":3,"names":["PlayerStatLeader","PlayerStatLeaderConverter","playerLeaderResponseData","leadBy","localPlayerResponseData","goals","assists","points","wins","playerStatLeaderArray","Array","i","length","id","firstName","default","lastName","sweaterNumber","playerImage","headshot","teamAbbrev","teamName","teamLogo","position","value","playerStatLeader","_c","$RefreshReg$"],"sources":["C:/Users/gawbi/Programming/HockeyStatsWebApp/react/src/Data/Helpers/PlayerStatLeaderConverter.ts"],"sourcesContent":["import { PlayerStatLeader } from \"../Models/PlayerStatLeader\";\r\n\r\nexport default function PlayerStatLeaderConverter(playerLeaderResponseData:any, leadBy:string){\r\n    let localPlayerResponseData:any[] = [];\r\n    switch(leadBy){\r\n        case \"goals\":\r\n            localPlayerResponseData = playerLeaderResponseData.goals;\r\n            break;\r\n        case \"assists\":\r\n            localPlayerResponseData = playerLeaderResponseData.assists;\r\n            break;\r\n        case \"points\":\r\n            localPlayerResponseData = playerLeaderResponseData.points;\r\n            break;\r\n        case \"wins\":\r\n            localPlayerResponseData = playerLeaderResponseData.wins;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    let playerStatLeaderArray:PlayerStatLeader[] = new Array(10);\r\n    for(let i = 0; i < localPlayerResponseData.length; i++){\r\n        const id:number = localPlayerResponseData[i].id;\r\n        const firstName:string = localPlayerResponseData[i].firstName.default;\r\n        const lastName:string = localPlayerResponseData[i].lastName.default;\r\n        const sweaterNumber = localPlayerResponseData[i].sweaterNumber;\r\n        const playerImage = localPlayerResponseData[i].headshot;\r\n        const teamAbbrev = localPlayerResponseData[i].teamAbbrev;\r\n        const teamName = localPlayerResponseData[i].teamName.default;\r\n        const teamLogo = localPlayerResponseData[i].teamLogo;\r\n        const position = localPlayerResponseData[i].position;\r\n        const value = localPlayerResponseData[i].value;\r\n\r\n        const playerStatLeader:PlayerStatLeader = new PlayerStatLeader(id, firstName, lastName, sweaterNumber, playerImage, teamAbbrev, teamName, teamLogo, position, value);\r\n        playerStatLeaderArray[i] = playerStatLeader;\r\n    }\r\n    return playerStatLeaderArray;\r\n}"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,4BAA4B;AAE7D,eAAe,SAASC,yBAAyBA,CAACC,wBAA4B,EAAEC,MAAa,EAAC;EAC1F,IAAIC,uBAA6B,GAAG,EAAE;EACtC,QAAOD,MAAM;IACT,KAAK,OAAO;MACRC,uBAAuB,GAAGF,wBAAwB,CAACG,KAAK;MACxD;IACJ,KAAK,SAAS;MACVD,uBAAuB,GAAGF,wBAAwB,CAACI,OAAO;MAC1D;IACJ,KAAK,QAAQ;MACTF,uBAAuB,GAAGF,wBAAwB,CAACK,MAAM;MACzD;IACJ,KAAK,MAAM;MACPH,uBAAuB,GAAGF,wBAAwB,CAACM,IAAI;MACvD;IACJ;MACI;EACR;EACA,IAAIC,qBAAwC,GAAG,IAAIC,KAAK,CAAC,EAAE,CAAC;EAC5D,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,uBAAuB,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAC;IACnD,MAAME,EAAS,GAAGT,uBAAuB,CAACO,CAAC,CAAC,CAACE,EAAE;IAC/C,MAAMC,SAAgB,GAAGV,uBAAuB,CAACO,CAAC,CAAC,CAACG,SAAS,CAACC,OAAO;IACrE,MAAMC,QAAe,GAAGZ,uBAAuB,CAACO,CAAC,CAAC,CAACK,QAAQ,CAACD,OAAO;IACnE,MAAME,aAAa,GAAGb,uBAAuB,CAACO,CAAC,CAAC,CAACM,aAAa;IAC9D,MAAMC,WAAW,GAAGd,uBAAuB,CAACO,CAAC,CAAC,CAACQ,QAAQ;IACvD,MAAMC,UAAU,GAAGhB,uBAAuB,CAACO,CAAC,CAAC,CAACS,UAAU;IACxD,MAAMC,QAAQ,GAAGjB,uBAAuB,CAACO,CAAC,CAAC,CAACU,QAAQ,CAACN,OAAO;IAC5D,MAAMO,QAAQ,GAAGlB,uBAAuB,CAACO,CAAC,CAAC,CAACW,QAAQ;IACpD,MAAMC,QAAQ,GAAGnB,uBAAuB,CAACO,CAAC,CAAC,CAACY,QAAQ;IACpD,MAAMC,KAAK,GAAGpB,uBAAuB,CAACO,CAAC,CAAC,CAACa,KAAK;IAE9C,MAAMC,gBAAiC,GAAG,IAAIzB,gBAAgB,CAACa,EAAE,EAAEC,SAAS,EAAEE,QAAQ,EAAEC,aAAa,EAAEC,WAAW,EAAEE,UAAU,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,CAAC;IACpKf,qBAAqB,CAACE,CAAC,CAAC,GAAGc,gBAAgB;EAC/C;EACA,OAAOhB,qBAAqB;AAChC;AAACiB,EAAA,GAnCuBzB,yBAAyB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}