{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gawbi\\\\Programming\\\\HockeyStatsWebApp\\\\react\\\\src\\\\Components\\\\LandingPage\\\\LandingPageStandings\\\\LandingPageStandingsTable.tsx\",\n  _s = $RefreshSig$();\nimport { useTheme } from \"@table-library/react-table-library/theme\";\nimport { getTheme } from \"@table-library/react-table-library/baseline\";\nimport { CompactTable } from \"@table-library/react-table-library/compact\";\nimport * as React from \"react\";\n\n// import { Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LandingPageStandingsTable({\n  standingsData\n}) {\n  _s();\n  const theme = useTheme(getTheme());\n  const data = {\n    nodes: standingsData\n  };\n  const COLUMNS = [{\n    label: 'conferenceStandingsPlace',\n    renderCell: item => item.conferenceStandingsPlace\n  }, {\n    label: 'teamName',\n    renderCell: item => item.teamName\n  }, {\n    label: 'wins',\n    renderCell: item => item.wins\n  }, {\n    label: 'losses',\n    renderCell: item => item.losses\n  }, {\n    label: 'otLosses',\n    renderCell: item => item.otLosses\n  }, {\n    label: 'record',\n    renderCell: item => item.record\n  }, {\n    label: 'points',\n    renderCell: item => item.points\n  }, {\n    label: 'pointsPercentage',\n    renderCell: item => item.pointsPercentage\n  }];\n  return /*#__PURE__*/_jsxDEV(CompactTable, {\n    columns: COLUMNS,\n    data: data,\n    theme: theme\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n  //   return (\n  //     <Table responsive=\"sm\" striped bordered>\n  //       <thead>\n  //         <tr>\n  //           <th>#</th>\n  //           <th>Team</th>\n  //           <th>W</th>\n  //           <th>L</th>\n  //           <th>OT</th>\n  //           <th>Record</th>\n  //           <th>P</th>\n  //           <th>P%</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {standingsData.map((team: StandingsTeam) => {\n  //           let rowColor: string =outOfPlayoffsColor;\n  //           if (team.leagueStanding === 1) {\n  //             rowColor = leagueLeaderColor;\n  //           } else if (team.conferenceStandingsPlace === 1) {\n  //             rowColor = conferenceLeaderColor;\n  //           } else if (team.divisionStandingsPlace === 1) {\n  //             rowColor = divisionLeaderColor;\n  //           } else if (team.divisionStandingsPlace <= 3) {\n  //             rowColor = divisionRankedColor;\n  //           } else if (team.wildCardRank === 1 || team.wildCardRank === 2) {\n  //             rowColor = wildCardColor\n  //           } else {\n  //             rowColor = outOfPlayoffsColor;\n  //           }\n  //           return (\n  //             <tr style={{backgroundColor:leagueLeaderColor}}>\n  //               <td>{team.conferenceStandingsPlace}</td>\n  //               <td>{team.teamName}</td>\n  //               <td>{team.wins}</td>\n  //               <td>{team.losses}</td>\n  //               <td>{team.otLosses}</td>\n  //               <td>{team.record}</td>\n  //               <td>{team.points} pts</td>\n  //               <td>{team.pointsPercentage}%</td>\n  //             </tr>\n  //           );\n  //         })}\n  //       </tbody>\n  //     </Table>\n  //   );\n}\n_s(LandingPageStandingsTable, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = LandingPageStandingsTable;\nvar _c;\n$RefreshReg$(_c, \"LandingPageStandingsTable\");","map":{"version":3,"names":["useTheme","getTheme","CompactTable","React","jsxDEV","_jsxDEV","LandingPageStandingsTable","standingsData","_s","theme","data","nodes","COLUMNS","label","renderCell","item","conferenceStandingsPlace","teamName","wins","losses","otLosses","record","points","pointsPercentage","columns","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gawbi/Programming/HockeyStatsWebApp/react/src/Components/LandingPage/LandingPageStandings/LandingPageStandingsTable.tsx"],"sourcesContent":["import { useTheme } from \"@table-library/react-table-library/theme\";\r\nimport { getTheme } from \"@table-library/react-table-library/baseline\";\r\nimport { StandingsTeam } from \"../../../Data/Models/StandingsTeam\";\r\nimport {\r\n  Column,\r\n  CompactTable,\r\n} from \"@table-library/react-table-library/compact\";\r\nimport * as React from \"react\";\r\nimport { TableNode } from \"@table-library/react-table-library\";\r\n// import { Table } from \"react-bootstrap\";\r\nimport { Table } from '@table-library/react-table-library/table';\r\nimport { conferenceLeaderColor, divisionLeaderColor, divisionRankedColor, leagueLeaderColor, outOfPlayoffsColor, wildCardColor } from \"../../../style/LandingPage/colors\";\r\n\r\ninterface LandingPageStandingTableProps {\r\n  standingsData: StandingsTeam[];\r\n}\r\nexport default function LandingPageStandingsTable({\r\n  standingsData,\r\n}: LandingPageStandingTableProps) {\r\n  const theme = useTheme(getTheme());\r\n  const data = {nodes:standingsData}\r\n  const COLUMNS= [\r\n      {label: 'conferenceStandingsPlace', renderCell:(item:StandingsTeam)=>item.conferenceStandingsPlace},\r\n      {label: 'teamName', renderCell:(item:StandingsTeam)=>item.teamName},\r\n      {label: 'wins', renderCell:(item:StandingsTeam)=>item.wins},\r\n      {label: 'losses', renderCell:(item:StandingsTeam)=>item.losses},\r\n      {label: 'otLosses', renderCell:(item:StandingsTeam)=> item.otLosses},\r\n      {label: 'record', renderCell:(item:StandingsTeam)=>item.record},\r\n      {label:'points', renderCell:(item:StandingsTeam)=>item.points},\r\n      {label:'pointsPercentage', renderCell:(item:StandingsTeam)=>item.pointsPercentage},\r\n  ];\r\n  return (\r\n      <CompactTable columns={COLUMNS} data={data} theme={theme}/>\r\n  )\r\n//   return (\r\n//     <Table responsive=\"sm\" striped bordered>\r\n//       <thead>\r\n//         <tr>\r\n//           <th>#</th>\r\n//           <th>Team</th>\r\n//           <th>W</th>\r\n//           <th>L</th>\r\n//           <th>OT</th>\r\n//           <th>Record</th>\r\n//           <th>P</th>\r\n//           <th>P%</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {standingsData.map((team: StandingsTeam) => {\r\n//           let rowColor: string =outOfPlayoffsColor;\r\n//           if (team.leagueStanding === 1) {\r\n//             rowColor = leagueLeaderColor;\r\n//           } else if (team.conferenceStandingsPlace === 1) {\r\n//             rowColor = conferenceLeaderColor;\r\n//           } else if (team.divisionStandingsPlace === 1) {\r\n//             rowColor = divisionLeaderColor;\r\n//           } else if (team.divisionStandingsPlace <= 3) {\r\n//             rowColor = divisionRankedColor;\r\n//           } else if (team.wildCardRank === 1 || team.wildCardRank === 2) {\r\n//             rowColor = wildCardColor\r\n//           } else {\r\n//             rowColor = outOfPlayoffsColor;\r\n//           }\r\n//           return (\r\n//             <tr style={{backgroundColor:leagueLeaderColor}}>\r\n//               <td>{team.conferenceStandingsPlace}</td>\r\n//               <td>{team.teamName}</td>\r\n//               <td>{team.wins}</td>\r\n//               <td>{team.losses}</td>\r\n//               <td>{team.otLosses}</td>\r\n//               <td>{team.record}</td>\r\n//               <td>{team.points} pts</td>\r\n//               <td>{team.pointsPercentage}%</td>\r\n//             </tr>\r\n//           );\r\n//         })}\r\n//       </tbody>\r\n//     </Table>\r\n//   );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,0CAA0C;AACnE,SAASC,QAAQ,QAAQ,6CAA6C;AAEtE,SAEEC,YAAY,QACP,4CAA4C;AACnD,OAAO,KAAKC,KAAK,MAAM,OAAO;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,eAAe,SAASC,yBAAyBA,CAAC;EAChDC;AAC6B,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAMC,KAAK,GAAGT,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAMS,IAAI,GAAG;IAACC,KAAK,EAACJ;EAAa,CAAC;EAClC,MAAMK,OAAO,GAAE,CACX;IAACC,KAAK,EAAE,0BAA0B;IAAEC,UAAU,EAAEC,IAAkB,IAAGA,IAAI,CAACC;EAAwB,CAAC,EACnG;IAACH,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAEC,IAAkB,IAAGA,IAAI,CAACE;EAAQ,CAAC,EACnE;IAACJ,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAEC,IAAkB,IAAGA,IAAI,CAACG;EAAI,CAAC,EAC3D;IAACL,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAEC,IAAkB,IAAGA,IAAI,CAACI;EAAM,CAAC,EAC/D;IAACN,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAEC,IAAkB,IAAIA,IAAI,CAACK;EAAQ,CAAC,EACpE;IAACP,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAEC,IAAkB,IAAGA,IAAI,CAACM;EAAM,CAAC,EAC/D;IAACR,KAAK,EAAC,QAAQ;IAAEC,UAAU,EAAEC,IAAkB,IAAGA,IAAI,CAACO;EAAM,CAAC,EAC9D;IAACT,KAAK,EAAC,kBAAkB;IAAEC,UAAU,EAAEC,IAAkB,IAAGA,IAAI,CAACQ;EAAgB,CAAC,CACrF;EACD,oBACIlB,OAAA,CAACH,YAAY;IAACsB,OAAO,EAAEZ,OAAQ;IAACF,IAAI,EAAEA,IAAK;IAACD,KAAK,EAAEA;EAAM;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EAEjE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AAACpB,EAAA,CAhEuBF,yBAAyB;EAAA,QAGjCN,QAAQ;AAAA;AAAA6B,EAAA,GAHAvB,yBAAyB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}